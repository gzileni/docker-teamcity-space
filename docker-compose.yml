version: '3.8'


# Default ${TEAMCITY_VERSION} is defined in .env file

# ./buildserver_pgdata - Posgres DB data
# ./data_dir - TeamCity data directory
# ./teamcity-server-logs - logs of primary TeamCity server
# ./agents/agent-1/conf - configuration directory for the first build agent
# ./agents/agent-1/conf - configuration directory for the second build agent

services:

    teamcity-sqlserver:
        container_name: teamcity-sqlserver
        image: mcr.microsoft.com/mssql/server:2022-latest
        restart: always
        profiles: ["all", "teamcity"]
        environment:
            ACCEPT_EULA: Y
            MSSQL_SA_PASSWORD: ${SQLSERVER_PWD}
            MSSQL_PID: Evaluation
        ports:
            - 1434:1433
        networks:
            - teamcity-network

    nginx:
        image: nginx:1.19
        container_name: teamcity-nginx
        profiles: ["all", "space"]
        ports:
            - 8222:8222
        volumes:
            - ./nginx:/etc/nginx/conf.d
        networks:
            - teamcity-network

    teamcity-server:
        image: jetbrains/teamcity-server
        container_name: teamcity-server
        profiles: ["all", "teamcity"]
        ports:
            - ${TEAMCITY_PORT}:8111
        volumes:
            - ./data/teamcity/docker:/data/teamcity_server/datadir
            - ./teamcity/docker/logs/teamcity-server-logs:/opt/teamcity/logs
        depends_on:
            - teamcity-sqlserver
        networks:
            - teamcity-network

    space-configs:
        image: "public.registry.jetbrains.space/p/space-on-premises/docker/init-configs:2023.2.0"
        container_name: space-configs
        profiles: ["all", "space"]
        volumes:
            - ./data/configs:/home/init-config/config
        environment:
            AUTOMATION_TAG: "2023.2.0.128"
            SPACE_VERSION: "2023.2.0"
        networks:
            - teamcity-network

    space:
        image: "public.registry.jetbrains.space/p/space-on-premises/docker/space:2023.2.0"
        container_name: space
        profiles: ["all", "space"]
        volumes:
            - ./data/space:/home/space/circlet-server-onprem/config
        environment:
            JAVA_OPTS: "-Dconfig.file=/home/space/circlet-server-onprem/config/space.on-premises.conf -Dconfig.override_with_env_vars=true"
        depends_on:
            space-configs:
                condition: service_completed_successfully
            space-vcs:
                condition: service_started
            space-redis:
                condition: service_started
            space-pg:
                condition: service_started
            space-minio:
                condition: service_started
            space-es:
                condition: service_healthy
        ports:
            - 8084:8084
        networks:
            - teamcity-network

    space-vcs:
        image: "public.registry.jetbrains.space/p/space-on-premises/docker/vcs-hosting:2023.2.0"
        container_name: space-vcs
        profiles: ["all", "space"]
        volumes:
            - ./data/vcs:/home/space/git/vcs-hosting/config
        environment:
            JAVA_OPTS: '-Dproperties.file=config/vcs.on-premises.properties'
        depends_on:
            space-configs:
                condition: service_completed_successfully
            space-redis:
                condition: service_started
            space-pg:
                condition: service_started
            space-minio:
                condition: service_started
            space-es:
                condition: service_healthy
        ports:
            - 2222:2222
            - 8081:8080
        networks:
            - teamcity-network

    space-pkg:
        image: "public.registry.jetbrains.space/p/space-on-premises/docker/packages:2023.2.0"
        container_name: space-pkg
        profiles: ["all", "space"]
        volumes:
            - ./data/pkg:/home/space/packages-server/config
        environment:
            JAVA_OPTS: '-Dconfig.file=/home/space/packages-server/config/packages.on-premises.conf -Dconfig.override_with_env_vars=true'
        depends_on:
            space-configs:
                condition: service_completed_successfully
            space-redis:
                condition: service_started
            space-pg:
                condition: service_started
            space-minio:
                condition: service_started
            space-es:
                condition: service_healthy
        ports:
            - 8390:8390
            - 9390:9390
        networks:
            - teamcity-network

    space-ls:
        image: "public.registry.jetbrains.space/p/space-on-premises/docker/langservice:2023.2.0"
        container_name: space-ls
        profiles: ["all", "space"]
        volumes:
            - ./data/ls:/home/space/langservice-server/config
        environment:
            JAVA_OPTS: "-Dconfig.file=/home/space/langservice-server/config/langservice.on-premises.conf -Dconfig.override_with_env_vars=true"
        depends_on:
            space-configs:
                condition: service_completed_successfully
        ports:
            - 8095:8095
        networks:
            - teamcity-network

    space-pg:
        image: "postgres:12.2"
        container_name: space-pg
        profiles: ["all", "space"]
        volumes:
            - ./data/pg:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: space
            POSTGRES_PASSWORD: spacepassword
            POSTGRES_DB: spacedb
        ports:
            - 5432:5432
        networks:
            - teamcity-network

    space-es:
        image: "elasticsearch:7.17.7"
        container_name: space-es
        profiles: ["all", "space"]
        volumes:
            - ./data/es:/usr/share/elasticsearch/data
        environment:
            ES_JAVA_OPTS: -Xms512m -Xmx1024m
            discovery.type: single-node
            xpack.security.enabled: "false"
        ports:
            - 9200:9200
            - 9300:9300
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9200/_cat/health" ]
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 20s
        networks:
            - teamcity-network

    space-redis:
        image: "redis:7.0.2-alpine"
        container_name: space-redis
        profiles: ["all", "space"]
        ports:
            - 6379:6379
        networks:
            - teamcity-network

    space-minio:
        image: minio/minio:RELEASE.2021-09-09T21-37-07Z
        container_name: space-minio
        profiles: ["all", "space"]
        volumes:
            - ./data/minio:/data
        environment:
            MINIO_ROOT_USER: space-access-key
            MINIO_ROOT_PASSWORD: space-secret-key
        command: server --address :9000 --console-address :9001 --compat /data
        ports:
            - 9000:9000
            - 9001:9001
        networks:
            - teamcity-network

networks:
  teamcity-network:
    name: teamcity
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.10.0/24